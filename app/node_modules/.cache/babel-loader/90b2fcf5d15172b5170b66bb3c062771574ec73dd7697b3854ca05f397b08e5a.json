{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"login-wrapper\"\n};\nconst _hoisted_2 = {\n  class: \"form-container\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"error-message\"\n};\nconst _hoisted_5 = {\n  key: 2,\n  class: \"error-message general-error\"\n};\nconst _hoisted_6 = {\n  key: 3,\n  class: \"success-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", {\n    class: \"label\"\n  }, \"Login\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"input\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.nickname = $event),\n    onInput: _cache[1] || (_cache[1] = $event => $options.clearErrors('nickname'))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.nickname]]), $data.nicknameError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString($data.nicknameError), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _cache[7] || (_cache[7] = _createElementVNode(\"label\", {\n    class: \"label\"\n  }, \"Password\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    class: \"input\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.password = $event),\n    onInput: _cache[3] || (_cache[3] = $event => $options.clearErrors('password'))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.password]]), $data.passwordError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _toDisplayString($data.passwordError), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.generalError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _toDisplayString($data.generalError), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.successMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _toDisplayString($data.successMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createVNode(_component_router_link, {\n    to: \"#\",\n    class: \"full-width-link\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"button\", {\n      class: \"btn\",\n      onClick: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.login && $options.login(...args), [\"prevent\"]))\n    }, \"Login\")]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_router_link, {\n    to: \"/\",\n    class: \"link\"\n  }, {\n    default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\"Don't have an account?\")])),\n    _: 1 /* STABLE */,\n    __: [5]\n  })])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","type","_cache","$event","$data","nickname","onInput","$options","clearErrors","nicknameError","_hoisted_3","_toDisplayString","_createCommentVNode","password","passwordError","_hoisted_4","generalError","_hoisted_5","successMessage","_hoisted_6","_createVNode","_component_router_link","to","default","_withCtx","onClick","_withModifiers","args","login","_","_createTextVNode","__"],"sources":["D:\\Git\\WEB\\WEB\\app\\src\\components\\LoginPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-wrapper\">\r\n    <div class=\"form-container\">\r\n      <label class=\"label\">Login</label>\r\n      <input type=\"text\" class=\"input\" v-model=\"nickname\" @input=\"clearErrors('nickname')\" />\r\n      <div v-if=\"nicknameError\" class=\"error-message\">{{ nicknameError }}</div>\r\n\r\n      <label class=\"label\">Password</label>\r\n      <input type=\"password\" class=\"input\" v-model=\"password\" @input=\"clearErrors('password')\" />\r\n      <div v-if=\"passwordError\" class=\"error-message\">{{ passwordError }}</div>\r\n\r\n      <div v-if=\"generalError\" class=\"error-message general-error\">{{ generalError }}</div>\r\n      <div v-if=\"successMessage\" class=\"success-message\">{{ successMessage }}</div>\r\n\r\n      <router-link to=\"#\" class=\"full-width-link\">\r\n        <button class=\"btn\" @click.prevent=\"login\">Login</button>\r\n      </router-link>\r\n\r\n      <router-link to=\"/\" class=\"link\">Don't have an account?</router-link>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// ВАЖНО: Убедитесь, что путь к validation_enter.js верен\r\n// Он должен быть '../../C/validation_enter' если LoginPage.vue в src/components,\r\n// а validation_enter.js в WEB/C/\r\nimport { validateLoginNickname, validateLoginPassword } from '../../../C/validation_enter';\r\n\r\nexport default {\r\n  name: 'LoginPage',\r\n  data() {\r\n    return {\r\n      nickname: '',\r\n      password: '',\r\n      nicknameError: '',\r\n      passwordError: '',\r\n      generalError: '',\r\n      successMessage: ''\r\n    };\r\n  },\r\n  methods: {\r\n    clearErrors(field = null) {\r\n      if (field === 'nickname') {\r\n        this.nicknameError = '';\r\n      } else if (field === 'password') {\r\n        this.passwordError = '';\r\n      } else {\r\n        this.nicknameError = '';\r\n        this.passwordError = '';\r\n        this.generalError = '';\r\n        this.successMessage = '';\r\n      }\r\n    },\r\n\r\n    async login() {\r\n      this.clearErrors();\r\n\r\n      let isValid = true;\r\n\r\n      // 1. Клиентская валидация никнейма с использованием функции из validation_enter.js\r\n      const nicknameValidationResult = validateLoginNickname(this.nickname);\r\n      if (nicknameValidationResult) {\r\n        this.nicknameError = nicknameValidationResult;\r\n        isValid = false;\r\n      }\r\n\r\n      // 2. Клиентская валидация пароля с использованием функции из validation_enter.js\r\n      const passwordValidationResult = validateLoginPassword(this.password);\r\n      if (passwordValidationResult) {\r\n        this.passwordError = passwordValidationResult;\r\n        isValid = false;\r\n      }\r\n\r\n      // Если есть ошибки клиентской валидации, прерываем отправку на сервер\r\n      if (!isValid) {\r\n        console.log('Форма содержит ошибки клиентской валидации. Отправка на сервер отменена.');\r\n        return;\r\n      }\r\n\r\n      // Если клиентская валидация успешна, отправляем запрос на бэкенд\r\n      try {\r\n        const response = await fetch('http://localhost:3000/api/auth/login', { // URL вашего бэкенд API для входа\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ nickname: this.nickname, password: this.password })\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if (response.ok) { // response.ok для статусов 2xx\r\n          console.log('Вход успешен:', data);\r\n          this.successMessage = data.message || 'Вход успешно выполнен!';\r\n\r\n          // Сохраняем токен и информацию о пользователе\r\n          localStorage.setItem('chatToken', data.token);\r\n          localStorage.setItem('chatUserId', data.userId);\r\n          localStorage.setItem('chatNickname', data.nickname);\r\n\r\n          this.nickname = '';\r\n          this.password = '';\r\n\r\n          // Перенаправляем пользователя на страницу чата\r\n          setTimeout(() => {\r\n            this.$router.push('/chat');\r\n          }, 1500);\r\n\r\n        } else {\r\n          console.error('Ошибка входа:', data);\r\n          this.generalError = data.message || 'Произошла ошибка при входе. Пожалуйста, попробуйте еще раз.';\r\n          // Ваш бэкенд возвращает 'Неверный никнейм или пароль.' для обоих случаев (пользователь не найден или пароль не совпадает)\r\n        }\r\n      } catch (error) {\r\n        console.error('Произошла ошибка сети или другое непредвиденное исключение:', error);\r\n        this.generalError = 'Не удалось подключиться к серверу. Проверьте ваше интернет-соединение или запустите сервер.';\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* Ваши существующие стили */\r\n@import url('https://fonts.googleapis.com/css2?family=Abel&family=Roboto&display=swap');\r\n@import url('https://fonts.googleapis.com/css2?family=Abel&family=Roboto:wght@300;400;700&display=swap');\r\n\r\n.login-wrapper {\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-family: 'Abel', sans-serif;\r\n  padding: 20px;\r\n}\r\n\r\n.form-container {\r\n  width: 100%;\r\n  max-width: 400px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n}\r\n\r\n.label {\r\n  color: white;\r\n  font-size: 1rem;\r\n  text-align: left;\r\n}\r\n\r\n.input {\r\n  background-color: transparent;\r\n  border: 1px solid #818182;\r\n  border-radius: 10px;\r\n  padding: 10px 15px;\r\n  color: #818182;\r\n  font-size: 1rem;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.full-width-link {\r\n  width: 100%;\r\n  display: block;\r\n  text-decoration: none;\r\n  color: inherit;\r\n}\r\n\r\n.btn {\r\n  background-color: #42566C;\r\n  color: #FFFF;\r\n  border: none;\r\n  border-radius: 10px;\r\n  padding: 12px;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s ease;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n}\r\n\r\n/* НОВЫЕ СТИЛИ для сообщений об ошибках и успеха */\r\n.error-message {\r\n  color: #ff6b6b; /* Ярко-красный цвет для ошибок */\r\n  font-size: 0.8em;\r\n  margin-top: -10px; /* Поднимаем сообщение ближе к полю ввода */\r\n  min-height: 1.2em; /* Чтобы высота элемента не скакала, если нет ошибки */\r\n}\r\n\r\n.general-error {\r\n  text-align: center;\r\n  color: #ff6b6b;\r\n  margin-top: 5px; /* Небольшой отступ от кнопки */\r\n  font-weight: bold;\r\n}\r\n\r\n.success-message {\r\n  text-align: center;\r\n  color: #6bff96; /* Зеленый цвет для успешных сообщений */\r\n  margin-top: 5px; /* Небольшой отступ от кнопки */\r\n  font-weight: bold;\r\n}\r\n\r\n.link { /* Добавляем стиль для ссылки \"Don't have an account?\" */\r\n  color: #FFFF; /* Цвет, соответствующий вашему текущему стилю input */\r\n  text-align: center;\r\n  text-decoration: none;\r\n  font-size: 0.9rem;\r\n  margin-top: 5px; /* Небольшой отступ */\r\n}\r\n\r\n.link:hover {\r\n  text-decoration: underline;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC;AAAgB;;EAF/BC,GAAA;EAKgCD,KAAK,EAAC;;;EALtCC,GAAA;EASgCD,KAAK,EAAC;;;EATtCC,GAAA;EAW+BD,KAAK,EAAC;;;EAXrCC,GAAA;EAYiCD,KAAK,EAAC;;;;uBAXrCE,mBAAA,CAmBM,OAnBNC,UAmBM,GAlBJC,mBAAA,CAiBM,OAjBNC,UAiBM,G,0BAhBJD,mBAAA,CAAkC;IAA3BJ,KAAK,EAAC;EAAO,GAAC,OAAK,sB,gBAC1BI,mBAAA,CAAuF;IAAhFE,IAAI,EAAC,MAAM;IAACN,KAAK,EAAC,OAAO;IAJtC,uBAAAO,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIgDC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;IAAGG,OAAK,EAAAJ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEI,QAAA,CAAAC,WAAW;iEAA7BJ,KAAA,CAAAC,QAAQ,E,GACvCD,KAAA,CAAAK,aAAa,I,cAAxBZ,mBAAA,CAAyE,OAAzEa,UAAyE,EAAAC,gBAAA,CAAtBP,KAAA,CAAAK,aAAa,oBALtEG,mBAAA,gB,0BAOMb,mBAAA,CAAqC;IAA9BJ,KAAK,EAAC;EAAO,GAAC,UAAQ,sB,gBAC7BI,mBAAA,CAA2F;IAApFE,IAAI,EAAC,UAAU;IAACN,KAAK,EAAC,OAAO;IAR1C,uBAAAO,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAQoDC,KAAA,CAAAS,QAAQ,GAAAV,MAAA;IAAGG,OAAK,EAAAJ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEI,QAAA,CAAAC,WAAW;iEAA7BJ,KAAA,CAAAS,QAAQ,E,GAC3CT,KAAA,CAAAU,aAAa,I,cAAxBjB,mBAAA,CAAyE,OAAzEkB,UAAyE,EAAAJ,gBAAA,CAAtBP,KAAA,CAAAU,aAAa,oBATtEF,mBAAA,gBAWiBR,KAAA,CAAAY,YAAY,I,cAAvBnB,mBAAA,CAAqF,OAArFoB,UAAqF,EAAAN,gBAAA,CAArBP,KAAA,CAAAY,YAAY,oBAXlFJ,mBAAA,gBAYiBR,KAAA,CAAAc,cAAc,I,cAAzBrB,mBAAA,CAA6E,OAA7EsB,UAA6E,EAAAR,gBAAA,CAAvBP,KAAA,CAAAc,cAAc,oBAZ1EN,mBAAA,gBAcMQ,YAAA,CAEcC,sBAAA;IAFDC,EAAE,EAAC,GAAG;IAAC3B,KAAK,EAAC;;IAdhC4B,OAAA,EAAAC,QAAA,CAeQ,MAAyD,CAAzDzB,mBAAA,CAAyD;MAAjDJ,KAAK,EAAC,KAAK;MAAE8B,OAAK,EAAAvB,MAAA,QAAAA,MAAA,MAflCwB,cAAA,KAAAC,IAAA,KAe4CpB,QAAA,CAAAqB,KAAA,IAAArB,QAAA,CAAAqB,KAAA,IAAAD,IAAA,CAAK;OAAE,OAAK,E;IAfxDE,CAAA;MAkBMT,YAAA,CAAqEC,sBAAA;IAAxDC,EAAE,EAAC,GAAG;IAAC3B,KAAK,EAAC;;IAlBhC4B,OAAA,EAAAC,QAAA,CAkBuC,MAAsBtB,MAAA,QAAAA,MAAA,OAlB7D4B,gBAAA,CAkBuC,wBAAsB,E;IAlB7DD,CAAA;IAAAE,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}