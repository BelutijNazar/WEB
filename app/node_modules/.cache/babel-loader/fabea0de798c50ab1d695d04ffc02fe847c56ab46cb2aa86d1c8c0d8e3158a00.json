{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"reg-wrapper\"\n};\nconst _hoisted_2 = {\n  class: \"form-container\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"error-message\"\n};\nconst _hoisted_5 = {\n  key: 2,\n  class: \"error-message\"\n};\nconst _hoisted_6 = {\n  key: 3,\n  class: \"error-message general-error\"\n};\nconst _hoisted_7 = {\n  key: 4,\n  class: \"success-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", {\n    class: \"label\"\n  }, \"Login\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"input\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.nickname = $event),\n    onInput: _cache[1] || (_cache[1] = $event => $options.clearErrors('nickname'))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.nickname]]), $data.nicknameError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString($data.nicknameError), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _cache[9] || (_cache[9] = _createElementVNode(\"label\", {\n    class: \"label\"\n  }, \"Password\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    class: \"input\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.password = $event),\n    onInput: _cache[3] || (_cache[3] = $event => $options.clearErrors('password'))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.password]]), $data.passwordError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _toDisplayString($data.passwordError), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _cache[10] || (_cache[10] = _createElementVNode(\"label\", {\n    class: \"label\"\n  }, \"Password Check\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    class: \"input\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.confirmPassword = $event),\n    onInput: _cache[5] || (_cache[5] = $event => $options.clearErrors('confirmPassword'))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.confirmPassword]]), $data.confirmPasswordError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _toDisplayString($data.confirmPasswordError), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.generalError ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _toDisplayString($data.generalError), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.successMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _toDisplayString($data.successMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    class: \"btn\",\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.register && $options.register(...args))\n  }, \"Registration\"), _createVNode(_component_router_link, {\n    to: \"/log\",\n    class: \"link\"\n  }, {\n    default: _withCtx(() => _cache[7] || (_cache[7] = [_createTextVNode(\"Already have an account?\")])),\n    _: 1 /* STABLE */,\n    __: [7]\n  })])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","type","_cache","$event","$data","nickname","onInput","$options","clearErrors","nicknameError","_hoisted_3","_toDisplayString","_createCommentVNode","password","passwordError","_hoisted_4","confirmPassword","confirmPasswordError","_hoisted_5","generalError","_hoisted_6","successMessage","_hoisted_7","onClick","args","register","_createVNode","_component_router_link","to","default","_withCtx","_createTextVNode","_","__"],"sources":["D:\\Git\\WEB\\WEB\\app\\src\\components\\RegistrationPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"reg-wrapper\">\r\n    <div class=\"form-container\">\r\n      <label class=\"label\">Login</label>\r\n      <input type=\"text\" class=\"input\" v-model=\"nickname\" @input=\"clearErrors('nickname')\" />\r\n      <div v-if=\"nicknameError\" class=\"error-message\">{{ nicknameError }}</div>\r\n\r\n      <label class=\"label\">Password</label>\r\n      <input type=\"password\" class=\"input\" v-model=\"password\" @input=\"clearErrors('password')\" />\r\n      <div v-if=\"passwordError\" class=\"error-message\">{{ passwordError }}</div>\r\n\r\n      <label class=\"label\">Password Check</label>\r\n      <input type=\"password\" class=\"input\" v-model=\"confirmPassword\" @input=\"clearErrors('confirmPassword')\" />\r\n      <div v-if=\"confirmPasswordError\" class=\"error-message\">{{ confirmPasswordError }}</div>\r\n\r\n      <div v-if=\"generalError\" class=\"error-message general-error\">{{ generalError }}</div>\r\n      <div v-if=\"successMessage\" class=\"success-message\">{{ successMessage }}</div>\r\n\r\n      <button class=\"btn\" @click=\"register\">Registration</button>\r\n\r\n      <router-link to=\"/log\" class=\"link\">Already have an account?</router-link>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { validatePassword, validateConfirmPassword } from '../../../C/validation_reg';\r\n\r\nexport default {\r\n  name: 'RegistrationPage',\r\n  data() {\r\n    return {\r\n      nickname: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      nicknameError: '',\r\n      passwordError: '',\r\n      confirmPasswordError: '',\r\n      generalError: '',\r\n      successMessage: ''\r\n    };\r\n  },\r\n  methods: {\r\n    clearErrors(field = null) {\r\n      if (field === 'nickname') this.nicknameError = '';\r\n      else if (field === 'password') this.passwordError = '';\r\n      else if (field === 'confirmPassword') this.confirmPasswordError = '';\r\n      else {\r\n        this.nicknameError = '';\r\n        this.passwordError = '';\r\n        this.confirmPasswordError = '';\r\n        this.generalError = '';\r\n        this.successMessage = '';\r\n      }\r\n    },\r\n\r\n    async register() {\r\n      this.clearErrors();\r\n\r\n      let isValid = true;\r\n\r\n      if (!this.nickname.trim()) {\r\n        this.nicknameError = 'Логин не может быть пустым.';\r\n        isValid = false;\r\n      }\r\n\r\n      const passwordValidationResult = validatePassword(this.password);\r\n      if (passwordValidationResult) {\r\n        this.passwordError = passwordValidationResult;\r\n        isValid = false;\r\n      }\r\n\r\n      const confirmPasswordValidationResult = validateConfirmPassword(this.password, this.confirmPassword);\r\n      if (confirmPasswordValidationResult) {\r\n        this.confirmPasswordError = confirmPasswordValidationResult;\r\n        isValid = false;\r\n      }\r\n\r\n      if (!isValid) {\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await fetch('http://192.168.100.2:3000/api/auth/register', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ nickname: this.nickname, password: this.password })\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if (response.ok) {\r\n          this.successMessage = data.message || 'Регистрация успешно выполнена!';\r\n\r\n          this.nickname = '';\r\n          this.password = '';\r\n          this.confirmPassword = '';\r\n\r\n          setTimeout(() => {\r\n            this.$router.push('/log');\r\n          }, 2000);\r\n\r\n        } else {\r\n          this.generalError = data.message || 'Произошла ошибка при регистрации. Пожалуйста, попробуйте еще раз.';\r\n        }\r\n      } catch (error) {\r\n        this.generalError = 'Не удалось подключиться к серверу. Проверьте ваше интернет-соединение или запустите сервер.';\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n@import url('https://fonts.googleapis.com/css2?family=Abel&family=Roboto&display=swap');\r\n@import url('https://fonts.googleapis.com/css2?family=Abel&family=Roboto:wght@300;400;700&display=swap');\r\n\r\n.reg-wrapper {\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-family: 'Abel', sans-serif;\r\n  padding: 20px;\r\n  color: #eee;\r\n}\r\n\r\n.form-container {\r\n  width: 100%;\r\n  max-width: 400px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n  padding: 30px;\r\n}\r\n\r\n.label {\r\n  color: #eee;\r\n  font-size: 1rem;\r\n  text-align: left;\r\n  margin-bottom: -10px;\r\n}\r\n\r\n.input {\r\n  border: 1px solid #666;\r\n  border-radius: 10px;\r\n  padding: 12px 15px;\r\n  color: #fff;\r\n  font-size: 1rem;\r\n}\r\n\r\n.input::placeholder {\r\n  color: #aaa;\r\n}\r\n\r\n.btn {\r\n  background-color: #556B8D;\r\n  color: #FFFF;\r\n  border: none;\r\n  border-radius: 10px;\r\n  padding: 12px;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  transition: background-color 0.2s ease;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  margin-top: 10px;\r\n}\r\n\r\n.btn:hover {\r\n  background-color: #42566C;\r\n}\r\n\r\n.link {\r\n  color: #FFF;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.link:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n.error-message {\r\n  color: #ff6b6b;\r\n  font-size: 0.8em;\r\n  margin-top: -10px;\r\n  min-height: 1.2em;\r\n}\r\n\r\n.general-error {\r\n  text-align: center;\r\n  color: #ff6b6b;\r\n  margin-top: 10px;\r\n  font-weight: bold;\r\n}\r\n\r\n.success-message {\r\n  text-align: center;\r\n  color: #6bff96;\r\n  margin-top: 10px;\r\n  font-weight: bold;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}